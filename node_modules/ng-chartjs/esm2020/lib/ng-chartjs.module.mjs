import { NgModule } from '@angular/core';
import { NgChartjsDirective } from './ng-chartjs.directive';
import { NgChartjsService } from './ng-chartjs.service';
import { NgChartjsCustomPluginConfig } from './plugins-config';
import * as i0 from "@angular/core";
export class NgChartjsModule {
    /**
     * Register a plugin.
     * @param plugins
     */
    static registerPlugin(plugins = []) {
        const config = new NgChartjsCustomPluginConfig();
        config.plugins = plugins;
        return {
            ngModule: NgChartjsModule,
            providers: [
                {
                    provide: NgChartjsCustomPluginConfig,
                    useValue: config
                }
            ]
        };
    }
}
NgChartjsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: NgChartjsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgChartjsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.9", ngImport: i0, type: NgChartjsModule, declarations: [NgChartjsDirective], exports: [NgChartjsDirective] });
NgChartjsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: NgChartjsModule, providers: [NgChartjsService] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: NgChartjsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [],
                    declarations: [NgChartjsDirective],
                    exports: [NgChartjsDirective],
                    providers: [NgChartjsService]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctY2hhcnRqcy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1jaGFydGpzL3NyYy9saWIvbmctY2hhcnRqcy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUQsTUFBTSxlQUFlLENBQUM7QUFFOUYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7O0FBUS9ELE1BQU0sT0FBTyxlQUFlO0lBQzFCOzs7T0FHRztJQUNJLE1BQU0sQ0FBQyxjQUFjLENBQUMsVUFBZ0MsRUFBRTtRQUM3RCxNQUFNLE1BQU0sR0FBRyxJQUFJLDJCQUEyQixFQUFFLENBQUM7UUFDakQsTUFBTSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFFekIsT0FBTztZQUNMLFFBQVEsRUFBRSxlQUFlO1lBQ3pCLFNBQVMsRUFBRTtnQkFDVDtvQkFDRSxPQUFPLEVBQUUsMkJBQTJCO29CQUNwQyxRQUFRLEVBQUUsTUFBTTtpQkFDakI7YUFDRjtTQUNGLENBQUM7SUFDSixDQUFDOzs0R0FsQlUsZUFBZTs2R0FBZixlQUFlLGlCQUpYLGtCQUFrQixhQUN2QixrQkFBa0I7NkdBR2pCLGVBQWUsYUFGZixDQUFDLGdCQUFnQixDQUFDOzJGQUVsQixlQUFlO2tCQU4zQixRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRSxFQUFFO29CQUNYLFlBQVksRUFBRSxDQUFDLGtCQUFrQixDQUFDO29CQUNsQyxPQUFPLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQztvQkFDN0IsU0FBUyxFQUFFLENBQUMsZ0JBQWdCLENBQUM7aUJBQzlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMsIE9wdGlvbmFsLCBTa2lwU2VsZiwgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2hhcnRDb21wb25lbnRMaWtlIH0gZnJvbSAnY2hhcnQuanMnO1xuaW1wb3J0IHsgTmdDaGFydGpzRGlyZWN0aXZlIH0gZnJvbSAnLi9uZy1jaGFydGpzLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBOZ0NoYXJ0anNTZXJ2aWNlIH0gZnJvbSAnLi9uZy1jaGFydGpzLnNlcnZpY2UnO1xuaW1wb3J0IHsgTmdDaGFydGpzQ3VzdG9tUGx1Z2luQ29uZmlnIH0gZnJvbSAnLi9wbHVnaW5zLWNvbmZpZyc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtdLFxuICBkZWNsYXJhdGlvbnM6IFtOZ0NoYXJ0anNEaXJlY3RpdmVdLFxuICBleHBvcnRzOiBbTmdDaGFydGpzRGlyZWN0aXZlXSxcbiAgcHJvdmlkZXJzOiBbTmdDaGFydGpzU2VydmljZV1cbn0pXG5leHBvcnQgY2xhc3MgTmdDaGFydGpzTW9kdWxlIHtcbiAgLyoqXG4gICAqIFJlZ2lzdGVyIGEgcGx1Z2luLlxuICAgKiBAcGFyYW0gcGx1Z2luc1xuICAgKi9cbiAgcHVibGljIHN0YXRpYyByZWdpc3RlclBsdWdpbihwbHVnaW5zOiBDaGFydENvbXBvbmVudExpa2VbXSA9IFtdKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ0NoYXJ0anNNb2R1bGU+IHtcbiAgICBjb25zdCBjb25maWcgPSBuZXcgTmdDaGFydGpzQ3VzdG9tUGx1Z2luQ29uZmlnKCk7XG4gICAgY29uZmlnLnBsdWdpbnMgPSBwbHVnaW5zO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBOZ0NoYXJ0anNNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IE5nQ2hhcnRqc0N1c3RvbVBsdWdpbkNvbmZpZyxcbiAgICAgICAgICB1c2VWYWx1ZTogY29uZmlnXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9O1xuICB9XG59XG4iXX0=